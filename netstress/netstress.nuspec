<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>netstress</id>
    <version>2.0.9686</version>
    <owners>bcurran3</owners>
    <packageSourceUrl>https://github.com/bcurran3/ChocolateyPackages/tree/master/netstress</packageSourceUrl>
    <title>NetStress (Install)</title>
    <authors>Nuts About Nets LLC</authors>
    <projectUrl>http://nutsaboutnets.com/netstress/</projectUrl>
	<iconUrl>https://raw.githubusercontent.com/bcurran3/ChocolateyPackages/master/netstress/NetStress_icon.png</iconUrl>
	<docsUrl>https://nutsaboutnets-documentation.s3.amazonaws.com/NetStress/NetStress.htm</docsUrl>
    <copyright>Copyright 2010 Nuts About Nets, LLC</copyright>
	<licenseUrl>https://nutsaboutnets-documentation.s3.amazonaws.com/NetStress/NetStress.htm</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <tags>nutsaboutnets netstress network benchmarking benchmark stress tool admin</tags>
    <summary>NetStress - Network Benchmarking Tool For Wired and Wireless Networks</summary>
    <description>
In order to test and troubleshoot networks we need tools that allow us to generate network traffic and analyze the network's throughput performance. This is true for both wired and wireless networks.  We focus strictly on 802.11 (WiFi) networks because analysis tools are relatively scarce or, when available, tend to be rather expensive and overly complex to use. Also, because WiFi networks are sensitive to RF interference from other wireless devices, they are more difficult to troubleshoot and transient changes in the local environment may affect their performance. Tools that are typically used to troubleshoot wireless networks report signal strengths of RF interference or beacons from an access point in units of dBm or RSSI (relative signal strength indication). But what do these really mean? How do these translate in terms of the performance of your wireless network?

Our wireless network adapter may report the beacon strength of our access point to be -53 dBm or -65 dBm or -73 dBm or (fill-in some number). Or, our RF spectrum analyzer displays a -74 dBm interference peak in the middle of channel 6. Or, we and our neighbor or the business next door have our access points configured to use channel 11? Is this good? Bad? Doesn't matter? Ultimately, the bottom line and what we care about most is throughput -- that is, how many bytes-per-sec can be transferred from one node on the wireless network to another. The dBm and RSSI numbers don't mean much if you can't somehow relate them to a performance metric -- the most relevant being 'bytes / sec'.  In order to properly troubleshoot a wireless network we need a way to benchmark its performance, so as modifications are made we can determine whether or not they really make a difference in the network's performance.

This is where **NetStress** fits in. It's a simple tool, originally created for our internal use, which we later realized would also be of value to others. Here's the ideal scenario: You install a new wireless network and it works perfectly. Run **NetStress** and record the benchmark results for later reference. Sometime in the future when either you or others suspect performance has declined then run **NetStress** again and compare the latest results with those you gathered when the network was first installed and working "perfectly". The results of that comparison will indicate whether or not there really is a problem and dictate which steps to take next (if any). Regardless of your technical expertise or how expensive your diagnostic tools, if you are modifying a wireless network or making decisions to modify it and you are not testing throughput then you risk wasting time and resources going down the wrong path.	

![Screenshot of NetStress](http://nansupport.com/images/NetStress/NetStress_tbs_385x346.png)

###NetStress includes the following features:

* single instance of the application (i.e. each instance can be used as server or server plus client)
* supports both TCP and UDP data transfers
* supports multiple data streams
* variable TCP / UDP segment size
* rate of packet transmission (Packets Per Second)
* variable Maximum Transmission Unit (MTU)
* uplink and downlink modes
* auto node discovery
* choice of display units (KBps, Kbps, MBps, Mbps)
* support for multiple network adapters
	</description>
    <releaseNotes></releaseNotes>
    <dependencies>
      <dependency id="dotnet3.5" />
    </dependencies>			
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
